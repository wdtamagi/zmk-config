#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    trackball_listener {
        compatible = "zmk,input-behavior-listener";
        device = <&vtrackball>;
        layers = <0 2 3 4 5>;
        evt-type = <INPUT_EV_REL>;
        x-input-code = <INPUT_REL_X>;
        y-input-code = <INPUT_REL_Y>;
        scale-multiplier = <1>;
        scale-divisor = <4>;
        bindings = <&ib_toggle_layer 5>;
    };

    trackball_snipe_listener {
        compatible = "zmk,input-behavior-listener";   
        device = <&vtrackball>;
        layers = <>;
        evt-type = <INPUT_EV_REL>;
        x-input-code = <INPUT_REL_X>;
        y-input-code = <INPUT_REL_Y>;
        scale-multiplier = <1>;
        scale-divisor = <12>;
    };

    trackball_scroll_listener {
        compatible = "zmk,input-behavior-listener";
        device = <&vtrackball>;
        layers = <1>;
        evt-type = <INPUT_EV_REL>;            
        x-input-code = <INPUT_REL_MISC>;
        y-input-code = <INPUT_REL_WHEEL>;
        y-invert;
        bindings = <&ib_wheel_scaler 1 16>;
    };

    ib_wheel_scaler: ib_wheel_scaler {
        compatible = "zmk,input-behavior-scaler";
        #binding-cells = <2>;
        evt-type = <INPUT_EV_REL>;
        input-code = <INPUT_REL_WHEEL>;
    };

    ib_toggle_layer: ib_toggle_layer {
        compatible = "zmk,input-behavior-tog-layer";
        #binding-cells = <1>;
        time-to-live-ms = <750>;
    };

    behaviors {
        lt: layer_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <240>;
            quick-tap-ms = <150>;
            bindings = 
                <&mo>,
                <&kp>;
        };
    };

    macros {
        m_copy: m_copy {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LGUI>
                , <&macro_tap &kp C>
                , <&macro_release &kp LGUI>
                ;
        };
        m_paste: m_paste {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LGUI>
                , <&macro_tap &kp V>
                , <&macro_release &kp LGUI>
                ;
        };
        m_mcontrol: m_mcontrol {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LCTRL>
                , <&macro_tap &kp UP>
                , <&macro_release &kp LCTRL>
                ;
        };
        m_printscr: m_printscr {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LGUI>
                , <&macro_press &kp LSHIFT>
                , <&macro_tap &kp N5>
                , <&macro_release &kp LGUI>
                , <&macro_release &kp LSHIFT>
                ;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            label = "Base";
            bindings = <
    &mo 4                   &kp LCTRL               &kp DEL              &kp BSPC                 &kp RET                &kp TAB                &mkp LCLK                   &mkp RCLK           
&mo 1   &sk LSHIFT  &kp COMMA       &kp APOS  &kp DOT     &kp I  &kp SPACE     &kp R          &kp A     &kp SPACE    &kp L       &kp J      &kp Y      &kp SEMI    &sk RSHIFT       &mo 1
	&mo 2                   &kp U                   &kp O                &kp E                    &kp T                  &kp N                  &kp S                       &mo 2      

                            &trans                  &m_paste                                                             &kp F12                &kp UP                          
	                   &trans    &trans        &trans    &m_printscr                                           &m_mcontrol      &trans   &kp LEFT      &kp RIGHT  
	                        &trans                  &m_copy                                                              &kp RGUI               &kp DOWN                    

                                                                         &kp V                    &kp P                                     
	                                                                 &kp M   &kp K            &kp F   &kp H   
	                                                                     &kp C                    &kp D                        

                                                                         &kp ESC                  &kp X                                     
	                                                                 &kp G     &kp W          &kp B   &key_repeat   
	                                                                     &kp Z                    &kp Q                        
            >;
        };

        Symbol {
            label = "Symbol";
            bindings = <
    &mo 4                   &kp AT                    &kp PLUS                  &kp DLLR                      &kp N1              &kp N5               &kp N9                     &mkp RCLK           
&mo 2   &caps_word  &kp EQUAL      &kp GRAVE  &kp CARET       &kp TILDE  &kp AMPS      &kp STAR          &kp N4     &kp N2   &kp N8    &kp N6   &kp EQUAL     &kp N0     &caps_word       &mo 2
	&mo 1                   &kp EXCL                  &kp PRCNT                 &kp HASH                      &kp N3              &kp N7               &kp QMARK                  &mo 1      

                            &trans                    &trans                                                                      &trans               &kp UP                          
	                   &trans    &trans          &trans    &trans                                                            &trans    &trans   &kp LEFT      &kp RIGHT  
	                        &trans                    &trans                                                                      &trans               &kp DOWN                    

                                                                                &kp LT                        &kp PIPE                                     
	                                                                     &kp LBRC    &kp RBRC          &kp FSLH      &kp NUBS   
	                                                                            &kp GT                        &trans                        

                                                                                &kp ESC                       &kp LBKT                                     
	                                                                    &kp UNDER     &kp MINUS        &kp LPAR      &kp RPAR   
	                                                                            &trans                        &kp RBKT                        
            >;
        };

        Raise {
            label = "Raise";
            bindings = <
&mo 1       &kp EQUAL  &kp CARET  &kp AMPS      &kp N4    &kp N8     &kp EQUAL  &kp RSHIFT
&mo 4       &kp AT     &kp PLUS   &kp DLLR      &kp N1    &kp N5     &kp N9     &trans
&mo 2       &kp EXCL   &kp PRCNT  &kp HASH      &kp N3    &kp N7     &kp QMARK  &mo 2
&kp RSHIFT  &kp GRAVE  &kp TILDE  &kp STAR      &kp N2    &kp N6     &kp N0     &mo 1
&trans      &trans     &kp LBRC   &kp UNDER     &kp FSLH  &kp LPAR   &trans     &kp LEFT
&trans      &trans     &kp LT     &kp PLUS      &kp PIPE  &kp LBKT   &trans     &kp UP
&trans      &trans     &kp GT     &trans        &trans    &kp RBKT   &trans     &kp DOWN
&trans      &trans     &kp RBRC   &kp MINUS     &kp NUBS  &kp RPAR   &trans     &kp RIGHT
            >;
        };

        Game {
            label = "Game";
            bindings = <
&trans  &trans  &trans  &trans     &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans     &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans     &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans     &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans     &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans     &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans     &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans     &trans  &trans  &trans  &trans
            >;
        };

        Game_++ {
            label = "Game ++";
            bindings = <
&trans  &trans  &trans  &trans     &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans     &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans     &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans     &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans     &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans     &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans     &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans     &trans  &trans  &trans  &trans
            >;
        };

        Mouse {
            bindings = <
&trans  &trans  &trans  &trans     &trans     &trans  &trans  &trans
&trans  &trans  &trans  &trans     &trans     &trans  &trans  &trans
&trans  &trans  &trans  &trans     &trans     &trans  &trans  &trans
&trans  &trans  &trans  &trans     &trans     &trans  &trans  &trans
&trans  &trans  &trans  &trans     &mkp LCLK  &trans  &trans  &trans
&trans  &trans  &trans  &trans     &trans     &trans  &trans  &trans
&trans  &trans  &trans  &trans     &trans     &trans  &trans  &trans
&trans  &trans  &trans  &trans     &mkp RCLK  &trans  &trans  &trans
            >;
        };
    };
};
