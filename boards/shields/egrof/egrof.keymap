#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    trackball_listener {
        compatible = "zmk,input-behavior-listener";
        device = <&vtrackball>;
        layers = <0 2 3 4 5>;
        evt-type = <INPUT_EV_REL>;
        x-input-code = <INPUT_REL_X>;
        y-input-code = <INPUT_REL_Y>;
        scale-multiplier = <1>;
        scale-divisor = <4>;
        bindings = <&ib_toggle_layer 5>;
    };

    trackball_snipe_listener {
        compatible = "zmk,input-behavior-listener";   
        device = <&vtrackball>;
        layers = <>;
        evt-type = <INPUT_EV_REL>;
        x-input-code = <INPUT_REL_X>;
        y-input-code = <INPUT_REL_Y>;
        scale-multiplier = <1>;
        scale-divisor = <12>;
    };

    trackball_scroll_listener {
        compatible = "zmk,input-behavior-listener";
        device = <&vtrackball>;
        layers = <1>;
        evt-type = <INPUT_EV_REL>;            
        x-input-code = <INPUT_REL_MISC>;
        y-input-code = <INPUT_REL_WHEEL>;
        y-invert;
        bindings = <&ib_wheel_scaler 1 16>;
    };

    ib_wheel_scaler: ib_wheel_scaler {
        compatible = "zmk,input-behavior-scaler";
        #binding-cells = <2>;
        evt-type = <INPUT_EV_REL>;
        input-code = <INPUT_REL_WHEEL>;
    };

    ib_toggle_layer: ib_toggle_layer {
        compatible = "zmk,input-behavior-tog-layer";
        #binding-cells = <1>;
        time-to-live-ms = <750>;
    };

    behaviors {
        lt: layer_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <240>;
            quick-tap-ms = <150>;
            bindings = 
                <&mo>,
                <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            label = "Base";
            bindings = <
&mo2       &kp COMMA  &kp DOT  &kp SPACE    &kp A    &kp L   &kp Y     &kp RSHIFT
&mo4       &kp LCTRL  &kp BSPC &kp BSPC     &kp RET  &kp TAB &kp RCTRL &trans
&mo1       &kp U      &kp O    &kp E        &kp T    &kp N   &kp S     &mo1
&kp RSHIFT &kp APOS   &kp I    &kp R        &trans   &kp J   &kp SEMI  &mo2
&trans     &trans     &kp M    &kp G        &kp B    &kp F   &trans    &kp LEFT
&trans     &trans     &kp V    &kp ESC      &kp X    &kp P   &trans    &kp UP
&trans     &trans     &kp C    &kp Z        &kp Q    &kp D   &trans    &kp DOWN
&trans     &trans     &kp K    &kp W        &kp RGUI &kp H   &trans    &kp RIGHT
            >;
        };

        Lower {
            label = "Lower";
            bindings = <
&mo1       &kp COMMA  &kp DOT  &kp SPACE    &kp A    &kp L   &kp Y     &kp RSHIFT
&mo4       &kp LCTRL  &kp BSPC &kp BSPC     &kp RET  &kp TAB &kp RCTRL &trans
&mo2       &kp U      &kp O    &kp E        &kp T    &kp N   &kp S     &mo2
&kp RSHIFT &kp APOS   &kp I    &kp R        &trans   &kp J   &kp SEMI  &mo1
&trans     &trans     &kp M    &kp G        &kp B    &kp F   &trans    &kp LEFT
&trans     &trans     &kp V    &kp ESC      &kp X    &kp P   &trans    &kp UP
&trans     &trans     &kp C    &kp Z        &kp Q    &kp D   &trans    &kp DOWN
&trans     &trans     &kp K    &kp W        &kp RGUI &kp H   &trans    &kp RIGHT
            >;
        };

        Raise {
            label = "Raise";
            bindings = <
&mo1       &kp EQUAL  &kp CARET  &kp AMPS      &kp N4    &kp N8     &kp EQUAL  &kp RSHIFT
&mo4       &kp AT     &kp PLUS   &kp DLLR      &kp N1    &kp N5     &kp N9     &trans
&mo2       &kp EXCL   &kp PRCNT  &kp HASH      &kp N3    &kp N7     &kp QMARK  &mo2
&kp RSHIFT &kp GRAVE  &kp TILDE  &kp STAR      &kp N2    &kp N6     &kp N0     &mo1
&trans     &trans     &kp LBRC   &kp UNDER     &kp FSLH  &kp LPAR   &trans     &kp LEFT
&trans     &trans     &kp LT     &kp PLUS      &kp PIPE  &kp LBKT   &trans     &kp UP
&trans     &trans     &kp GT     &trans        &trans    &kp RBKT   &trans     &kp DOWN
&trans     &trans     &kp RBRC   &kp MINUS     &kp NUBS  &kp RPAR   &trans     &kp RIGHT
            >;
        };

        Game {
            label = "Game";
            bindings = <
&trans  &trans  &trans  &trans     &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans     &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans     &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans     &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans     &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans     &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans     &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans     &trans  &trans  &trans  &trans
            >;
        };

        Game_++ {
            label = "Game ++";
            bindings = <
&trans  &trans  &trans  &trans     &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans     &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans     &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans     &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans     &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans     &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans     &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans     &trans  &trans  &trans  &trans
            >;
        };

        Mouse {
            bindings = <
&trans  &trans  &trans  &trans     &trans     &trans  &trans  &trans
&trans  &trans  &trans  &trans     &trans     &trans  &trans  &trans
&trans  &trans  &trans  &trans     &trans     &trans  &trans  &trans
&trans  &trans  &trans  &trans     &trans     &trans  &trans  &trans
&trans  &trans  &trans  &trans     &mkp LCLK  &trans  &trans  &trans
&trans  &trans  &trans  &trans     &trans     &trans  &trans  &trans
&trans  &trans  &trans  &trans     &trans     &trans  &trans  &trans
&trans  &trans  &trans  &trans     &mkp RCLK  &trans  &trans  &trans
            >;
        };
    };
};
